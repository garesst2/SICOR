/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sicor.vista.Catalogos;

import com.sun.imageio.plugins.common.I18N;
import java.math.BigDecimal;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import sicor.controlador.CuentasJpaController;
import sicor.controlador.EmpresasJpaController;
import sicor.modelo.Cuentas;
import sicor.vista.Menu.Inicio;

/**
 *
 * @author gares
 */
public class frmCuentas extends javax.swing.JDialog {

    /**
     * Creates new form frmCuentas
     */
    private EntityManagerFactory emf = Persistence.createEntityManagerFactory("SICORPU");
    private EntityManagerFactory emf2 = Persistence.createEntityManagerFactory("SICORPU");
    public List<Cuentas> listDiarios = mostrarCuentasPorEmpresas();
    public static Cuentas cuenta;

    public frmCuentas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtIdCuenta.setVisible(false);
    }

    private List<Cuentas> mostrarCuentasPorEmpresas() {
        CuentasJpaController ctyCuentas = new CuentasJpaController(emf);
        EmpresasJpaController ctyEmpresa = new EmpresasJpaController(emf2);
        return ctyCuentas.getCuentasByEmpresa(ctyEmpresa.findEmpresas(Inicio.empresaGlobal.getIdEmpresa()));
    }

    public List<Cuentas> getListDiarios() {
        return listDiarios;
    }

    public void setListDiarios(List<Cuentas> listDiarios) {
        this.listDiarios = listDiarios;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCuentas = new javax.swing.JTable();
        txtIdCuenta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodCuenta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombCuenta = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnAgregar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtAbono = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${listDiarios}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblCuentas);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCuenta}"));
        columnBinding.setColumnName("Id Cuenta");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codCuenta}"));
        columnBinding.setColumnName("Código Cuenta");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombCuenta}"));
        columnBinding.setColumnName("Nombre Cuenta");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${abono}"));
        columnBinding.setColumnName("Haber");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cargo}"));
        columnBinding.setColumnName("Deber");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tblCuentas);
        if (tblCuentas.getColumnModel().getColumnCount() > 0) {
            tblCuentas.getColumnModel().getColumn(0).setMinWidth(0);
            tblCuentas.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblCuentas.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        jLabel1.setText("Código");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N
        jLabel5.setText("CUENTAS");

        jLabel2.setText("Nombre");

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("LIMPIAR");

        txtAbono.setText("Se abona directamente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIdCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLimpiar))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNombCuenta, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                        .addComponent(txtAbono)
                                        .addComponent(txtCodCuenta)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtAbono)
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnLimpiar))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            cuenta = new Cuentas();
            cuenta.setNombCuenta(txtNombCuenta.getText());
            cuenta.setCargoDirecto(txtAbono.isSelected());
            cuenta.setAbono(new BigDecimal("0.00"));
            cuenta.setCargo(new BigDecimal("0.00"));
            cuenta.setIdEmpresa(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()));
            cuenta.setCodCuenta(txtCodCuenta.getText());
            switch (cuenta.getCodCuenta().length()) {
                case 1:
                    cuenta.setIdCuentaPadre(null);
                    guardarDatos();
                    break;
                case 2:
                    if (new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 1)) != null) {
                        cuenta.setIdCuentaPadre(new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 1)));
                        guardarDatos();
                    } else {
                        JOptionPane.showMessageDialog(null, "No existe una cuenta padre, para el código ingresado ");
                    }
                    break;
                case 4:
                    if (new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 2)) != null) {
                        cuenta.setIdCuentaPadre(new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 2)));
                        guardarDatos();
                    } else {
                        JOptionPane.showMessageDialog(null, "No existe una cuenta padre, para el código ingresado");
                    }
                    break;
                case 6:
                    if (new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 4)) != null) {
                        cuenta.setIdCuentaPadre(new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 4)));
                        guardarDatos();
                    } else {
                        JOptionPane.showMessageDialog(null, "No existe una cuenta padre, para el código ingresado");
                    }
                    break;
                case 8:
                    if (new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 6)) != null) {
                        cuenta.setIdCuentaPadre(new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 6)));
                        guardarDatos();
                    } else {
                        JOptionPane.showMessageDialog(null, "No existe una cuenta padre, para el código ingresado");
                    }
                    break;
                case 10:
                    if (new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 8)) != null) {
                        cuenta.setIdCuentaPadre(new CuentasJpaController(emf).getCuentasByCod(new EmpresasJpaController(emf2).findEmpresas(Inicio.empresaGlobal.getIdEmpresa()), cuenta.getCodCuenta().substring(0, 8)));
                        guardarDatos();
                    } else {
                        JOptionPane.showMessageDialog(null, "No existe una cuenta padre, para el código ingresado");
                    }
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "El sistema ha detectado que el formato del código de cuenta es incorrecto y/o incoherente.");
                    break;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error: " + e.toString());
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void guardarDatos() {
        CuentasJpaController ctrCuentas = new CuentasJpaController(emf);
        ctrCuentas.create(cuenta);
        JOptionPane.showMessageDialog(null, "Se ha guardado con exito.");
        limpiar();
        listDiarios = mostrarCuentasPorEmpresas();
        actualizarTabla();
    }

    private void limpiar() {
        tblCuentas.clearSelection();
        txtAbono.setSelected(false);
        txtCodCuenta.setText("");
        txtIdCuenta.setText("");
        txtNombCuenta.setText("");

    }

    private void actualizarTabla() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${listDiarios}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblCuentas);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCuenta}"));
        columnBinding.setColumnName("Id Cuenta");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codCuenta}"));
        columnBinding.setColumnName("Código Cuenta");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombCuenta}"));
        columnBinding.setColumnName("Nombre Cuenta");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${abono}"));
        columnBinding.setColumnName("Haber");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cargo}"));
        columnBinding.setColumnName("Deber");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tblCuentas);
        if (tblCuentas.getColumnModel().getColumnCount() > 0) {
            tblCuentas.getColumnModel().getColumn(0).setMinWidth(0);
            tblCuentas.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblCuentas.getColumnModel().getColumn(0).setMaxWidth(0);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmCuentas dialog = new frmCuentas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblCuentas;
    private javax.swing.JCheckBox txtAbono;
    private javax.swing.JTextField txtCodCuenta;
    private javax.swing.JTextField txtIdCuenta;
    private javax.swing.JTextField txtNombCuenta;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
